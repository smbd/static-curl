name: build binary

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      curl-version:
        description: 'Version of curl to build'
        required: true
        type: string

      no-cache:
        description: 'Build without cache'
        required: false
        default: false
        type: boolean

jobs:
  BuildDockerImage:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-24.04
            platform: linux/amd64
          - os: ubuntu-24.04-arm
            platform: linux/arm64

    runs-on: ${{ matrix.os }}

    steps:
      - name: prepare
        run: |
          echo "BUILD_DATE=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
          if (echo ${GITHUB_REF#refs/*/} | grep -q -P '^v\d+\.') ; then echo "CURL_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV; else echo "CURL_VERSION=${{ inputs.curl-version }}" >> $GITHUB_ENV; fi

      - name: checkout
        uses: actions/checkout@v4

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v3

      - name: docker build
        id: build
        uses: docker/build-push-action@v6
        with:
          build-args: CURL_VERSION=${{ env.CURL_VERSION }}
          pull: true
          tags: curl:${{ env.BUILD_DATE }}
          context: .
          platforms: ${{ matrix.platform }}
          load: true
          cache-from: type=gha,scope=${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,mode=max,scope=${{ env.PLATFORM_PAIR }}
          no-cache: ${{ inputs.no-cache || false }}

      - name: create container
        run: |
          docker create --name curl curl:${{ env.BUILD_DATE }}

      - name: copy artifact from container
        run: |
          docker cp curl:/tmp/release/curl .
          zip -9 curl-${{ env.CURL_VERSION }}-${{ env.PLATFORM_PAIR }}.zip curl

      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: curl-${{ env.CURL_VERSION }}-${{ env.PLATFORM_PAIR }}
          path: curl-${{ env.CURL_VERSION }}-${{ env.PLATFORM_PAIR }}.zip
          if-no-files-found: error
          retention-days: 1
          compression-level: 0

  Release:
    needs: BuildDockerImage
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: curl-*

      - name: upload artifacts
        if: github.ref_type == 'tag'
        uses: ncipollo/release-action@v1
        with:
          artifacts: curl-*/*.zip
          allowUpdates: true
